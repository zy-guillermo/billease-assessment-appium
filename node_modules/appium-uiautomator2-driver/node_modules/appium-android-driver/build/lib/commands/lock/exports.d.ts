/**
 * @this {AndroidDriver}
 * @param {import('../types').LockOpts} opts
 * @returns {Promise<void>}
 */
export function mobileLock(this: import("../../driver").AndroidDriver, opts?: import("../types").LockOpts): Promise<void>;
/**
 * @this {AndroidDriver}
 * @param {number} [seconds]
 * @returns {Promise<void>}
 */
export function lock(this: import("../../driver").AndroidDriver, seconds?: number): Promise<void>;
/**
 * @this {AndroidDriver}
 * @returns {Promise<boolean>}
 */
export function isLocked(this: import("../../driver").AndroidDriver): Promise<boolean>;
/**
 * @this {AndroidDriver}
 * @returns {Promise<void>}
 */
export function unlock(this: import("../../driver").AndroidDriver): Promise<void>;
/**
 * @this {AndroidDriver}
 * @param {import('../types').UnlockOptions} [opts={}]
 * @returns {Promise<void>}
 */
export function mobileUnlock(this: import("../../driver").AndroidDriver, opts?: import("../types").UnlockOptions): Promise<void>;
/**
 * @this {AndroidDriver}
 * @param {AndroidDriverCaps?} [caps=null]
 * @returns {Promise<void>}
 */
export function unlockWithOptions(this: import("../../driver").AndroidDriver, caps?: AndroidDriverCaps | null): Promise<void>;
export type AndroidDriverCaps = import("@appium/types").Capabilities<import("../../constraints").AndroidDriverConstraints>;
export type AndroidDriver = import("../../driver").AndroidDriver;
//# sourceMappingURL=exports.d.ts.map